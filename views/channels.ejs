<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gestión de Canales</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    /* Mantenemos los estilos que ya tenías */
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f9f9f9;
      color: #333;
    }

    /* ... resto de tus estilos ... */
  </style>
</head>

<body>
  <header>
    <h1>Gestión de Canales</h1>
    <a href="/">Volver al inicio</a>
  </header>
  <main>
    <!-- Lista de canales -->
    <section>
      <h2>Lista de Canales</h2>
      <ul>
        <% channels.forEach((channel, index)=> { %>
          <li>
            <div>
              <strong>
                <%= channel.name %>
              </strong>
            </div>
            <div>
              Última actualización: <%= channel.lastUpdated %>
            </div>
            <div class="countdown" id="countdown-<%= index %>"></div>

            <form action="/channels/edit" method="POST" class="channel-form">
              <input type="hidden" name="index" value="<%= index %>">
              <div class="form-group">
                <label>
                  Nombre:
                  <input type="text" name="name" value="<%= channel.name %>" required>
                </label>
                <label>
                  HLS URL:
                  <input type="text" name="playlist_url" value="<%= channel.playlist_url %>" required>
                </label>
                <label>
                  RTMP URL:
                  <input type="text" name="rtmp_url" value="<%= channel.rtmp_url || '' %>">
                </label>
              </div>
              <div class="channel-controls">
                <button type="submit" class="save-btn">Guardar</button>
                <button type="button" class="start-btn"
                  onclick="controlStream('<%= channel.name %>', 'start')">Iniciar</button>
                <button type="button" class="stop-btn"
                  onclick="controlStream('<%= channel.name %>', 'stop')">Detener</button>
                <button type="button" class="delete-btn"
                  onclick="deleteChannel('<%= channel.name %>')">Eliminar</button>
              </div>
            </form>
          </li>
          <% }); %>
      </ul>
    </section>

    <!-- Formulario para agregar nuevo canal -->
    <div class="control-buttons" style="margin: 20px 0;">
      <form action="/channels/startAll" method="POST" style="display: inline;">
        <button type="submit" class="btn btn-success">
          Iniciar Todas las Transmisiones
        </button>
      </form>

      <form action="/channels/stopAll" method="POST" style="display: inline; margin-left: 10px;">
        <button type="submit" class="btn btn-danger">
          Detener Todas las Transmisiones
        </button>
      </form>
    </div>
  </main>

  <script>
    // Función para controlar el stream
    async function controlStream(channelName, action) {
      try {
        const response = await fetch(`/channels/${action}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ name: channelName })
        });

        if (response.ok) {
          location.reload();
        } else {
          alert(`Error al ${action === 'start' ? 'iniciar' : 'detener'} el stream`);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Error al procesar la solicitud');
      }
    }

    // Función para eliminar canal
    async function deleteChannel(channelName) {
      if (confirm('¿Está seguro de que desea eliminar este canal?')) {
        try {
          const response = await fetch('/channels/delete', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name: channelName })
          });

          if (response.ok) {
            location.reload();
          } else {
            alert('Error al eliminar el canal');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error al procesar la solicitud');
        }
      }
    }

    // Función para calcular la cuenta regresiva (la que ya tenías)
    function updateCountdown(lastUpdatedTime, elementId) {
      const countdownElement = document.getElementById(elementId);
      const now = new Date();
      const lastUpdated = new Date(lastUpdatedTime);
      const hoursDifference = (now - lastUpdated) / 1000 / 60 / 60;

      if (hoursDifference < 4) {
        const countdownTime = 4 - hoursDifference;
        const countdownText = `${Math.floor(countdownTime)} horas restantes`;
        countdownElement.textContent = countdownText;
      } else {
        countdownElement.textContent = "Tiempo agotado";
      }
    }

        // Inicializar las cuentas regresivas
        <% channels.forEach((channel, index) => { %>
      updateCountdown("<%= channel.lastUpdated %>", "countdown-<%= index %>");
        <% }); %>
  </script>
</body>

</html>